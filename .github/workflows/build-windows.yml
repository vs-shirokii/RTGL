name: Windows

on: push

env:
  BUILD_TYPE: RelWithDebInfo
  DLSS_SDK_PATH: ${{ github.workspace }}\DLSS

jobs:
  build-msvc:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        dlss: [ON, OFF]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: DLSS
        uses: actions/checkout@v3
        if: matrix.dlss == 'ON'
        with:
          repository: NVIDIA/DLSS
          path: ${{ env.DLSS_SDK_PATH }}

      - name: Shaders
        run: |
          cd Source/Shaders
          python GenerateShaders.py

      - name: CMake
        run: |
          mkdir -p Build/bin
          cmake -B ${{github.workspace}}/BuildCMake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DRG_WITH_SURFACE_WIN32=ON -DRG_WITH_NVIDIA_DLSS=${{ matrix.dlss }}

      - name: Build
        run: cmake --build ${{github.workspace}}/BuildCMake --config ${{env.BUILD_TYPE}}

      - name: Prepare folder
        run: |
          mkdir -p final/bin
          copy Build/bin/RTGL1.pdb final/bin/RTGL1.pdb
          copy Build/bin/RTGL1.dll final/bin/RTGL1.dll
          mkdir -p final/include/RTGL1
          copy Include/RTGL1/RTGL1.h final/include/RTGL1/RTGL1.h
          mkdir final/ovrd
          copy Tools/BlueNoise_LDR_RGBA_128.ktx2 final/ovrd/BlueNoise_LDR_RGBA_128.ktx2
          copy Tools/DirtMask.ktx2 final/ovrd/DirtMask.ktx2
          copy Tools/SceneBuildWarning.ktx2 final/ovrd/SceneBuildWarning.ktx2
          copy Tools/CreateKTX2.py final/ovrd/CreateKTX2.py
          mkdir final/ovrd/shaders
          copy Build/shaders/*.spv final/ovrd/shaders
          copy LICENSE final/LICENSE
          echo "${{ github.sha }}" | Out-File -encoding ASCII final/VERSION

      - name: Upload
        uses: actions/upload-artifact@v3
        if: matrix.dlss != 'ON'
        with:
          name: RayTracedGL1-Bundle
          path: final/*
          
      - name: Upload (DLSS)
        uses: actions/upload-artifact@v3
        if: matrix.dlss == 'ON'
        with:
          name: RayTracedGL1-Bundle-DLSS
          path: final/*
